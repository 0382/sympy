
# encoding: utf-8

# *** GENERATED BY `setup.py antlr`, DO NOT EDIT BY HAND ***
#
# Generated from ../LaTeX.g4, derived from latex2sympy
#     latex2sympy is licensed under the MIT license
#     https://github.com/augustt198/latex2sympy/blob/master/LICENSE.txt
#
# Generated with antlr4
#    antlr4 is licensed under the BSD-3-Clause License
#    https://github.com/antlr/antlr4/blob/master/LICENSE.txt
from __future__ import print_function
from antlr4 import *
from io import StringIO
import sys



def serializedATN():
    with StringIO() as buf:
        buf.write(u"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2")
        buf.write(u"<\u01f1\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4")
        buf.write(u"\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r")
        buf.write(u"\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22")
        buf.write(u"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4")
        buf.write(u"\30\t\30\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35")
        buf.write(u"\t\35\4\36\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4")
        buf.write(u"$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t")
        buf.write(u",\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63")
        buf.write(u"\t\63\4\64\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\4")
        buf.write(u"9\t9\4:\t:\4;\t;\4<\t<\4=\t=\3\2\3\2\3\3\6\3\177\n\3")
        buf.write(u"\r\3\16\3\u0080\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3")
        buf.write(u"\7\3\b\3\b\3\t\3\t\3\n\3\n\3\13\3\13\3\f\3\f\3\r\3\r")
        buf.write(u"\3\16\3\16\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3")
        buf.write(u"\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20")
        buf.write(u"\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3")
        buf.write(u"\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20")
        buf.write(u"\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3")
        buf.write(u"\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20\5\20")
        buf.write(u"\u00d7\n\20\3\21\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3")
        buf.write(u"\22\3\22\3\23\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3\24")
        buf.write(u"\3\24\3\24\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3")
        buf.write(u"\26\3\27\3\27\3\27\3\27\3\27\3\30\3\30\3\30\3\30\3\30")
        buf.write(u"\3\31\3\31\3\31\3\31\3\31\3\32\3\32\3\32\3\32\3\32\3")
        buf.write(u"\33\3\33\3\33\3\33\3\33\3\34\3\34\3\34\3\34\3\34\3\34")
        buf.write(u"\3\34\3\34\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3")
        buf.write(u"\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\37\3\37\3\37")
        buf.write(u"\3\37\3\37\3\37\3\37\3\37\3 \3 \3 \3 \3 \3 \3 \3 \3!")
        buf.write(u"\3!\3!\3!\3!\3!\3!\3!\3\"\3\"\3\"\3\"\3\"\3\"\3#\3#\3")
        buf.write(u"#\3#\3#\3#\3$\3$\3$\3$\3$\3$\3%\3%\3%\3%\3%\3%\3%\3%")
        buf.write(u"\3&\3&\3&\3&\3&\3&\3&\3&\3\'\3\'\3\'\3\'\3\'\3\'\3\'")
        buf.write(u"\3\'\3(\3(\3(\3(\3(\3(\3)\3)\3)\3)\3)\3)\3)\3*\3*\3*")
        buf.write(u"\3*\3*\3*\3+\3+\3+\3+\3+\3,\3,\3,\3,\3,\3,\3-\3-\3-\3")
        buf.write(u"-\3-\3-\3-\3.\3.\3.\3.\3.\3.\3.\3.\3/\3/\3\60\3\60\3")
        buf.write(u"\61\3\61\3\62\3\62\3\63\3\63\7\63\u01a1\n\63\f\63\16")
        buf.write(u"\63\u01a4\13\63\3\63\3\63\3\63\6\63\u01a9\n\63\r\63\16")
        buf.write(u"\63\u01aa\5\63\u01ad\n\63\3\64\3\64\3\65\3\65\3\66\6")
        buf.write(u"\66\u01b4\n\66\r\66\16\66\u01b5\3\66\3\66\3\66\3\66\3")
        buf.write(u"\66\7\66\u01bd\n\66\f\66\16\66\u01c0\13\66\3\66\7\66")
        buf.write(u"\u01c3\n\66\f\66\16\66\u01c6\13\66\3\66\3\66\3\66\3\66")
        buf.write(u"\3\66\7\66\u01cd\n\66\f\66\16\66\u01d0\13\66\3\66\3\66")
        buf.write(u"\6\66\u01d4\n\66\r\66\16\66\u01d5\5\66\u01d8\n\66\3\67")
        buf.write(u"\3\67\38\38\39\39\39\39\39\3:\3:\3;\3;\3;\3;\3;\3<\3")
        buf.write(u"<\3=\3=\6=\u01ee\n=\r=\16=\u01ef\3\u01a2\2>\3\3\5\4\7")
        buf.write(u"\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17")
        buf.write(u"\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63")
        buf.write(u"\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W")
        buf.write(u"-Y.[/]\60_\61a\62c\2e\63g\64i\2k\65m\66o\67q8s9u:w;y")
        buf.write(u"<\3\2\5\5\2\13\f\17\17\"\"\4\2C\\c|\3\2\62;\2\u01fd\2")
        buf.write(u"\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3")
        buf.write(u"\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2")
        buf.write(u"\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2")
        buf.write(u"\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2")
        buf.write(u"\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2")
        buf.write(u"\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2")
        buf.write(u"\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3")
        buf.write(u"\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2")
        buf.write(u"I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2")
        buf.write(u"\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2")
        buf.write(u"\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2e\3\2\2\2\2g\3\2")
        buf.write(u"\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3")
        buf.write(u"\2\2\2\2u\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\3{\3\2\2\2\5")
        buf.write(u"~\3\2\2\2\7\u0084\3\2\2\2\t\u0086\3\2\2\2\13\u0088\3")
        buf.write(u"\2\2\2\r\u008a\3\2\2\2\17\u008c\3\2\2\2\21\u008e\3\2")
        buf.write(u"\2\2\23\u0090\3\2\2\2\25\u0092\3\2\2\2\27\u0094\3\2\2")
        buf.write(u"\2\31\u0096\3\2\2\2\33\u0098\3\2\2\2\35\u009a\3\2\2\2")
        buf.write(u"\37\u00d6\3\2\2\2!\u00d8\3\2\2\2#\u00dd\3\2\2\2%\u00e2")
        buf.write(u"\3\2\2\2\'\u00e8\3\2\2\2)\u00ed\3\2\2\2+\u00f1\3\2\2")
        buf.write(u"\2-\u00f6\3\2\2\2/\u00fb\3\2\2\2\61\u0100\3\2\2\2\63")
        buf.write(u"\u0105\3\2\2\2\65\u010a\3\2\2\2\67\u010f\3\2\2\29\u0117")
        buf.write(u"\3\2\2\2;\u011f\3\2\2\2=\u0127\3\2\2\2?\u012f\3\2\2\2")
        buf.write(u"A\u0137\3\2\2\2C\u013f\3\2\2\2E\u0145\3\2\2\2G\u014b")
        buf.write(u"\3\2\2\2I\u0151\3\2\2\2K\u0159\3\2\2\2M\u0161\3\2\2\2")
        buf.write(u"O\u0169\3\2\2\2Q\u016f\3\2\2\2S\u0176\3\2\2\2U\u017c")
        buf.write(u"\3\2\2\2W\u0181\3\2\2\2Y\u0187\3\2\2\2[\u018e\3\2\2\2")
        buf.write(u"]\u0196\3\2\2\2_\u0198\3\2\2\2a\u019a\3\2\2\2c\u019c")
        buf.write(u"\3\2\2\2e\u019e\3\2\2\2g\u01ae\3\2\2\2i\u01b0\3\2\2\2")
        buf.write(u"k\u01d7\3\2\2\2m\u01d9\3\2\2\2o\u01db\3\2\2\2q\u01dd")
        buf.write(u"\3\2\2\2s\u01e2\3\2\2\2u\u01e4\3\2\2\2w\u01e9\3\2\2\2")
        buf.write(u"y\u01eb\3\2\2\2{|\7.\2\2|\4\3\2\2\2}\177\t\2\2\2~}\3")
        buf.write(u"\2\2\2\177\u0080\3\2\2\2\u0080~\3\2\2\2\u0080\u0081\3")
        buf.write(u"\2\2\2\u0081\u0082\3\2\2\2\u0082\u0083\b\3\2\2\u0083")
        buf.write(u"\6\3\2\2\2\u0084\u0085\7-\2\2\u0085\b\3\2\2\2\u0086\u0087")
        buf.write(u"\7/\2\2\u0087\n\3\2\2\2\u0088\u0089\7,\2\2\u0089\f\3")
        buf.write(u"\2\2\2\u008a\u008b\7\61\2\2\u008b\16\3\2\2\2\u008c\u008d")
        buf.write(u"\7*\2\2\u008d\20\3\2\2\2\u008e\u008f\7+\2\2\u008f\22")
        buf.write(u"\3\2\2\2\u0090\u0091\7}\2\2\u0091\24\3\2\2\2\u0092\u0093")
        buf.write(u"\7\177\2\2\u0093\26\3\2\2\2\u0094\u0095\7]\2\2\u0095")
        buf.write(u"\30\3\2\2\2\u0096\u0097\7_\2\2\u0097\32\3\2\2\2\u0098")
        buf.write(u"\u0099\7~\2\2\u0099\34\3\2\2\2\u009a\u009b\7^\2\2\u009b")
        buf.write(u"\u009c\7n\2\2\u009c\u009d\7k\2\2\u009d\u009e\7o\2\2\u009e")
        buf.write(u"\36\3\2\2\2\u009f\u00a0\7^\2\2\u00a0\u00a1\7v\2\2\u00a1")
        buf.write(u"\u00d7\7q\2\2\u00a2\u00a3\7^\2\2\u00a3\u00a4\7t\2\2\u00a4")
        buf.write(u"\u00a5\7k\2\2\u00a5\u00a6\7i\2\2\u00a6\u00a7\7j\2\2\u00a7")
        buf.write(u"\u00a8\7v\2\2\u00a8\u00a9\7c\2\2\u00a9\u00aa\7t\2\2\u00aa")
        buf.write(u"\u00ab\7t\2\2\u00ab\u00ac\7q\2\2\u00ac\u00d7\7y\2\2\u00ad")
        buf.write(u"\u00ae\7^\2\2\u00ae\u00af\7T\2\2\u00af\u00b0\7k\2\2\u00b0")
        buf.write(u"\u00b1\7i\2\2\u00b1\u00b2\7j\2\2\u00b2\u00b3\7v\2\2\u00b3")
        buf.write(u"\u00b4\7c\2\2\u00b4\u00b5\7t\2\2\u00b5\u00b6\7t\2\2\u00b6")
        buf.write(u"\u00b7\7q\2\2\u00b7\u00d7\7y\2\2\u00b8\u00b9\7^\2\2\u00b9")
        buf.write(u"\u00ba\7n\2\2\u00ba\u00bb\7q\2\2\u00bb\u00bc\7p\2\2\u00bc")
        buf.write(u"\u00bd\7i\2\2\u00bd\u00be\7t\2\2\u00be\u00bf\7k\2\2\u00bf")
        buf.write(u"\u00c0\7i\2\2\u00c0\u00c1\7j\2\2\u00c1\u00c2\7v\2\2\u00c2")
        buf.write(u"\u00c3\7c\2\2\u00c3\u00c4\7t\2\2\u00c4\u00c5\7t\2\2\u00c5")
        buf.write(u"\u00c6\7q\2\2\u00c6\u00d7\7y\2\2\u00c7\u00c8\7^\2\2\u00c8")
        buf.write(u"\u00c9\7N\2\2\u00c9\u00ca\7q\2\2\u00ca\u00cb\7p\2\2\u00cb")
        buf.write(u"\u00cc\7i\2\2\u00cc\u00cd\7t\2\2\u00cd\u00ce\7k\2\2\u00ce")
        buf.write(u"\u00cf\7i\2\2\u00cf\u00d0\7j\2\2\u00d0\u00d1\7v\2\2\u00d1")
        buf.write(u"\u00d2\7c\2\2\u00d2\u00d3\7t\2\2\u00d3\u00d4\7t\2\2\u00d4")
        buf.write(u"\u00d5\7q\2\2\u00d5\u00d7\7y\2\2\u00d6\u009f\3\2\2\2")
        buf.write(u"\u00d6\u00a2\3\2\2\2\u00d6\u00ad\3\2\2\2\u00d6\u00b8")
        buf.write(u"\3\2\2\2\u00d6\u00c7\3\2\2\2\u00d7 \3\2\2\2\u00d8\u00d9")
        buf.write(u"\7^\2\2\u00d9\u00da\7k\2\2\u00da\u00db\7p\2\2\u00db\u00dc")
        buf.write(u"\7v\2\2\u00dc\"\3\2\2\2\u00dd\u00de\7^\2\2\u00de\u00df")
        buf.write(u"\7u\2\2\u00df\u00e0\7w\2\2\u00e0\u00e1\7o\2\2\u00e1$")
        buf.write(u"\3\2\2\2\u00e2\u00e3\7^\2\2\u00e3\u00e4\7r\2\2\u00e4")
        buf.write(u"\u00e5\7t\2\2\u00e5\u00e6\7q\2\2\u00e6\u00e7\7f\2\2\u00e7")
        buf.write(u"&\3\2\2\2\u00e8\u00e9\7^\2\2\u00e9\u00ea\7n\2\2\u00ea")
        buf.write(u"\u00eb\7q\2\2\u00eb\u00ec\7i\2\2\u00ec(\3\2\2\2\u00ed")
        buf.write(u"\u00ee\7^\2\2\u00ee\u00ef\7n\2\2\u00ef\u00f0\7p\2\2\u00f0")
        buf.write(u"*\3\2\2\2\u00f1\u00f2\7^\2\2\u00f2\u00f3\7u\2\2\u00f3")
        buf.write(u"\u00f4\7k\2\2\u00f4\u00f5\7p\2\2\u00f5,\3\2\2\2\u00f6")
        buf.write(u"\u00f7\7^\2\2\u00f7\u00f8\7e\2\2\u00f8\u00f9\7q\2\2\u00f9")
        buf.write(u"\u00fa\7u\2\2\u00fa.\3\2\2\2\u00fb\u00fc\7^\2\2\u00fc")
        buf.write(u"\u00fd\7v\2\2\u00fd\u00fe\7c\2\2\u00fe\u00ff\7p\2\2\u00ff")
        buf.write(u"\60\3\2\2\2\u0100\u0101\7^\2\2\u0101\u0102\7e\2\2\u0102")
        buf.write(u"\u0103\7u\2\2\u0103\u0104\7e\2\2\u0104\62\3\2\2\2\u0105")
        buf.write(u"\u0106\7^\2\2\u0106\u0107\7u\2\2\u0107\u0108\7g\2\2\u0108")
        buf.write(u"\u0109\7e\2\2\u0109\64\3\2\2\2\u010a\u010b\7^\2\2\u010b")
        buf.write(u"\u010c\7e\2\2\u010c\u010d\7q\2\2\u010d\u010e\7v\2\2\u010e")
        buf.write(u"\66\3\2\2\2\u010f\u0110\7^\2\2\u0110\u0111\7c\2\2\u0111")
        buf.write(u"\u0112\7t\2\2\u0112\u0113\7e\2\2\u0113\u0114\7u\2\2\u0114")
        buf.write(u"\u0115\7k\2\2\u0115\u0116\7p\2\2\u01168\3\2\2\2\u0117")
        buf.write(u"\u0118\7^\2\2\u0118\u0119\7c\2\2\u0119\u011a\7t\2\2\u011a")
        buf.write(u"\u011b\7e\2\2\u011b\u011c\7e\2\2\u011c\u011d\7q\2\2\u011d")
        buf.write(u"\u011e\7u\2\2\u011e:\3\2\2\2\u011f\u0120\7^\2\2\u0120")
        buf.write(u"\u0121\7c\2\2\u0121\u0122\7t\2\2\u0122\u0123\7e\2\2\u0123")
        buf.write(u"\u0124\7v\2\2\u0124\u0125\7c\2\2\u0125\u0126\7p\2\2\u0126")
        buf.write(u"<\3\2\2\2\u0127\u0128\7^\2\2\u0128\u0129\7c\2\2\u0129")
        buf.write(u"\u012a\7t\2\2\u012a\u012b\7e\2\2\u012b\u012c\7e\2\2\u012c")
        buf.write(u"\u012d\7u\2\2\u012d\u012e\7e\2\2\u012e>\3\2\2\2\u012f")
        buf.write(u"\u0130\7^\2\2\u0130\u0131\7c\2\2\u0131\u0132\7t\2\2\u0132")
        buf.write(u"\u0133\7e\2\2\u0133\u0134\7u\2\2\u0134\u0135\7g\2\2\u0135")
        buf.write(u"\u0136\7e\2\2\u0136@\3\2\2\2\u0137\u0138\7^\2\2\u0138")
        buf.write(u"\u0139\7c\2\2\u0139\u013a\7t\2\2\u013a\u013b\7e\2\2\u013b")
        buf.write(u"\u013c\7e\2\2\u013c\u013d\7q\2\2\u013d\u013e\7v\2\2\u013e")
        buf.write(u"B\3\2\2\2\u013f\u0140\7^\2\2\u0140\u0141\7u\2\2\u0141")
        buf.write(u"\u0142\7k\2\2\u0142\u0143\7p\2\2\u0143\u0144\7j\2\2\u0144")
        buf.write(u"D\3\2\2\2\u0145\u0146\7^\2\2\u0146\u0147\7e\2\2\u0147")
        buf.write(u"\u0148\7q\2\2\u0148\u0149\7u\2\2\u0149\u014a\7j\2\2\u014a")
        buf.write(u"F\3\2\2\2\u014b\u014c\7^\2\2\u014c\u014d\7v\2\2\u014d")
        buf.write(u"\u014e\7c\2\2\u014e\u014f\7p\2\2\u014f\u0150\7j\2\2\u0150")
        buf.write(u"H\3\2\2\2\u0151\u0152\7^\2\2\u0152\u0153\7c\2\2\u0153")
        buf.write(u"\u0154\7t\2\2\u0154\u0155\7u\2\2\u0155\u0156\7k\2\2\u0156")
        buf.write(u"\u0157\7p\2\2\u0157\u0158\7j\2\2\u0158J\3\2\2\2\u0159")
        buf.write(u"\u015a\7^\2\2\u015a\u015b\7c\2\2\u015b\u015c\7t\2\2\u015c")
        buf.write(u"\u015d\7e\2\2\u015d\u015e\7q\2\2\u015e\u015f\7u\2\2\u015f")
        buf.write(u"\u0160\7j\2\2\u0160L\3\2\2\2\u0161\u0162\7^\2\2\u0162")
        buf.write(u"\u0163\7c\2\2\u0163\u0164\7t\2\2\u0164\u0165\7v\2\2\u0165")
        buf.write(u"\u0166\7c\2\2\u0166\u0167\7p\2\2\u0167\u0168\7j\2\2\u0168")
        buf.write(u"N\3\2\2\2\u0169\u016a\7^\2\2\u016a\u016b\7u\2\2\u016b")
        buf.write(u"\u016c\7s\2\2\u016c\u016d\7t\2\2\u016d\u016e\7v\2\2\u016e")
        buf.write(u"P\3\2\2\2\u016f\u0170\7^\2\2\u0170\u0171\7v\2\2\u0171")
        buf.write(u"\u0172\7k\2\2\u0172\u0173\7o\2\2\u0173\u0174\7g\2\2\u0174")
        buf.write(u"\u0175\7u\2\2\u0175R\3\2\2\2\u0176\u0177\7^\2\2\u0177")
        buf.write(u"\u0178\7e\2\2\u0178\u0179\7f\2\2\u0179\u017a\7q\2\2\u017a")
        buf.write(u"\u017b\7v\2\2\u017bT\3\2\2\2\u017c\u017d\7^\2\2\u017d")
        buf.write(u"\u017e\7f\2\2\u017e\u017f\7k\2\2\u017f\u0180\7x\2\2\u0180")
        buf.write(u"V\3\2\2\2\u0181\u0182\7^\2\2\u0182\u0183\7h\2\2\u0183")
        buf.write(u"\u0184\7t\2\2\u0184\u0185\7c\2\2\u0185\u0186\7e\2\2\u0186")
        buf.write(u"X\3\2\2\2\u0187\u0188\7^\2\2\u0188\u0189\7d\2\2\u0189")
        buf.write(u"\u018a\7k\2\2\u018a\u018b\7p\2\2\u018b\u018c\7q\2\2\u018c")
        buf.write(u"\u018d\7o\2\2\u018dZ\3\2\2\2\u018e\u018f\7^\2\2\u018f")
        buf.write(u"\u0190\7o\2\2\u0190\u0191\7c\2\2\u0191\u0192\7v\2\2\u0192")
        buf.write(u"\u0193\7j\2\2\u0193\u0194\7k\2\2\u0194\u0195\7v\2\2\u0195")
        buf.write(u"\\\3\2\2\2\u0196\u0197\7a\2\2\u0197^\3\2\2\2\u0198\u0199")
        buf.write(u"\7`\2\2\u0199`\3\2\2\2\u019a\u019b\7<\2\2\u019bb\3\2")
        buf.write(u"\2\2\u019c\u019d\t\2\2\2\u019dd\3\2\2\2\u019e\u01a2\7")
        buf.write(u"f\2\2\u019f\u01a1\5c\62\2\u01a0\u019f\3\2\2\2\u01a1\u01a4")
        buf.write(u"\3\2\2\2\u01a2\u01a3\3\2\2\2\u01a2\u01a0\3\2\2\2\u01a3")
        buf.write(u"\u01ac\3\2\2\2\u01a4\u01a2\3\2\2\2\u01a5\u01ad\t\3\2")
        buf.write(u"\2\u01a6\u01a8\7^\2\2\u01a7\u01a9\t\3\2\2\u01a8\u01a7")
        buf.write(u"\3\2\2\2\u01a9\u01aa\3\2\2\2\u01aa\u01a8\3\2\2\2\u01aa")
        buf.write(u"\u01ab\3\2\2\2\u01ab\u01ad\3\2\2\2\u01ac\u01a5\3\2\2")
        buf.write(u"\2\u01ac\u01a6\3\2\2\2\u01adf\3\2\2\2\u01ae\u01af\t\3")
        buf.write(u"\2\2\u01afh\3\2\2\2\u01b0\u01b1\t\4\2\2\u01b1j\3\2\2")
        buf.write(u"\2\u01b2\u01b4\5i\65\2\u01b3\u01b2\3\2\2\2\u01b4\u01b5")
        buf.write(u"\3\2\2\2\u01b5\u01b3\3\2\2\2\u01b5\u01b6\3\2\2\2\u01b6")
        buf.write(u"\u01be\3\2\2\2\u01b7\u01b8\7.\2\2\u01b8\u01b9\5i\65\2")
        buf.write(u"\u01b9\u01ba\5i\65\2\u01ba\u01bb\5i\65\2\u01bb\u01bd")
        buf.write(u"\3\2\2\2\u01bc\u01b7\3\2\2\2\u01bd\u01c0\3\2\2\2\u01be")
        buf.write(u"\u01bc\3\2\2\2\u01be\u01bf\3\2\2\2\u01bf\u01d8\3\2\2")
        buf.write(u"\2\u01c0\u01be\3\2\2\2\u01c1\u01c3\5i\65\2\u01c2\u01c1")
        buf.write(u"\3\2\2\2\u01c3\u01c6\3\2\2\2\u01c4\u01c2\3\2\2\2\u01c4")
        buf.write(u"\u01c5\3\2\2\2\u01c5\u01ce\3\2\2\2\u01c6\u01c4\3\2\2")
        buf.write(u"\2\u01c7\u01c8\7.\2\2\u01c8\u01c9\5i\65\2\u01c9\u01ca")
        buf.write(u"\5i\65\2\u01ca\u01cb\5i\65\2\u01cb\u01cd\3\2\2\2\u01cc")
        buf.write(u"\u01c7\3\2\2\2\u01cd\u01d0\3\2\2\2\u01ce\u01cc\3\2\2")
        buf.write(u"\2\u01ce\u01cf\3\2\2\2\u01cf\u01d1\3\2\2\2\u01d0\u01ce")
        buf.write(u"\3\2\2\2\u01d1\u01d3\7\60\2\2\u01d2\u01d4\5i\65\2\u01d3")
        buf.write(u"\u01d2\3\2\2\2\u01d4\u01d5\3\2\2\2\u01d5\u01d3\3\2\2")
        buf.write(u"\2\u01d5\u01d6\3\2\2\2\u01d6\u01d8\3\2\2\2\u01d7\u01b3")
        buf.write(u"\3\2\2\2\u01d7\u01c4\3\2\2\2\u01d8l\3\2\2\2\u01d9\u01da")
        buf.write(u"\7?\2\2\u01dan\3\2\2\2\u01db\u01dc\7>\2\2\u01dcp\3\2")
        buf.write(u"\2\2\u01dd\u01de\7^\2\2\u01de\u01df\7n\2\2\u01df\u01e0")
        buf.write(u"\7g\2\2\u01e0\u01e1\7s\2\2\u01e1r\3\2\2\2\u01e2\u01e3")
        buf.write(u"\7@\2\2\u01e3t\3\2\2\2\u01e4\u01e5\7^\2\2\u01e5\u01e6")
        buf.write(u"\7i\2\2\u01e6\u01e7\7g\2\2\u01e7\u01e8\7s\2\2\u01e8v")
        buf.write(u"\3\2\2\2\u01e9\u01ea\7#\2\2\u01eax\3\2\2\2\u01eb\u01ed")
        buf.write(u"\7^\2\2\u01ec\u01ee\t\3\2\2\u01ed\u01ec\3\2\2\2\u01ee")
        buf.write(u"\u01ef\3\2\2\2\u01ef\u01ed\3\2\2\2\u01ef\u01f0\3\2\2")
        buf.write(u"\2\u01f0z\3\2\2\2\17\2\u0080\u00d6\u01a2\u01aa\u01ac")
        buf.write(u"\u01b5\u01be\u01c4\u01ce\u01d5\u01d7\u01ef\3\b\2\2")
        return buf.getvalue()


class LaTeXLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    WS = 2
    ADD = 3
    SUB = 4
    MUL = 5
    DIV = 6
    L_PAREN = 7
    R_PAREN = 8
    L_BRACE = 9
    R_BRACE = 10
    L_BRACKET = 11
    R_BRACKET = 12
    BAR = 13
    FUNC_LIM = 14
    LIM_APPROACH_SYM = 15
    FUNC_INT = 16
    FUNC_SUM = 17
    FUNC_PROD = 18
    FUNC_LOG = 19
    FUNC_LN = 20
    FUNC_SIN = 21
    FUNC_COS = 22
    FUNC_TAN = 23
    FUNC_CSC = 24
    FUNC_SEC = 25
    FUNC_COT = 26
    FUNC_ARCSIN = 27
    FUNC_ARCCOS = 28
    FUNC_ARCTAN = 29
    FUNC_ARCCSC = 30
    FUNC_ARCSEC = 31
    FUNC_ARCCOT = 32
    FUNC_SINH = 33
    FUNC_COSH = 34
    FUNC_TANH = 35
    FUNC_ARSINH = 36
    FUNC_ARCOSH = 37
    FUNC_ARTANH = 38
    FUNC_SQRT = 39
    CMD_TIMES = 40
    CMD_CDOT = 41
    CMD_DIV = 42
    CMD_FRAC = 43
    CMD_BINOM = 44
    CMD_MATHIT = 45
    UNDERSCORE = 46
    CARET = 47
    COLON = 48
    DIFFERENTIAL = 49
    LETTER = 50
    NUMBER = 51
    EQUAL = 52
    LT = 53
    LTE = 54
    GT = 55
    GTE = 56
    BANG = 57
    SYMBOL = 58

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ u"DEFAULT_MODE" ]

    literalNames = [ u"<INVALID>",
            u"','", u"'+'", u"'-'", u"'*'", u"'/'", u"'('", u"')'", u"'{'",
            u"'}'", u"'['", u"']'", u"'|'", u"'\\lim'", u"'\\int'", u"'\\sum'",
            u"'\\prod'", u"'\\log'", u"'\\ln'", u"'\\sin'", u"'\\cos'",
            u"'\\tan'", u"'\\csc'", u"'\\sec'", u"'\\cot'", u"'\\arcsin'",
            u"'\\arccos'", u"'\\arctan'", u"'\\arccsc'", u"'\\arcsec'",
            u"'\\arccot'", u"'\\sinh'", u"'\\cosh'", u"'\\tanh'", u"'\\arsinh'",
            u"'\\arcosh'", u"'\\artanh'", u"'\\sqrt'", u"'\\times'", u"'\\cdot'",
            u"'\\div'", u"'\\frac'", u"'\\binom'", u"'\\mathit'", u"'_'",
            u"'^'", u"':'", u"'='", u"'<'", u"'\\leq'", u"'>'", u"'\\geq'",
            u"'!'" ]

    symbolicNames = [ u"<INVALID>",
            u"WS", u"ADD", u"SUB", u"MUL", u"DIV", u"L_PAREN", u"R_PAREN",
            u"L_BRACE", u"R_BRACE", u"L_BRACKET", u"R_BRACKET", u"BAR",
            u"FUNC_LIM", u"LIM_APPROACH_SYM", u"FUNC_INT", u"FUNC_SUM",
            u"FUNC_PROD", u"FUNC_LOG", u"FUNC_LN", u"FUNC_SIN", u"FUNC_COS",
            u"FUNC_TAN", u"FUNC_CSC", u"FUNC_SEC", u"FUNC_COT", u"FUNC_ARCSIN",
            u"FUNC_ARCCOS", u"FUNC_ARCTAN", u"FUNC_ARCCSC", u"FUNC_ARCSEC",
            u"FUNC_ARCCOT", u"FUNC_SINH", u"FUNC_COSH", u"FUNC_TANH", u"FUNC_ARSINH",
            u"FUNC_ARCOSH", u"FUNC_ARTANH", u"FUNC_SQRT", u"CMD_TIMES",
            u"CMD_CDOT", u"CMD_DIV", u"CMD_FRAC", u"CMD_BINOM", u"CMD_MATHIT",
            u"UNDERSCORE", u"CARET", u"COLON", u"DIFFERENTIAL", u"LETTER",
            u"NUMBER", u"EQUAL", u"LT", u"LTE", u"GT", u"GTE", u"BANG",
            u"SYMBOL" ]

    ruleNames = [ u"T__0", u"WS", u"ADD", u"SUB", u"MUL", u"DIV", u"L_PAREN",
                  u"R_PAREN", u"L_BRACE", u"R_BRACE", u"L_BRACKET", u"R_BRACKET",
                  u"BAR", u"FUNC_LIM", u"LIM_APPROACH_SYM", u"FUNC_INT",
                  u"FUNC_SUM", u"FUNC_PROD", u"FUNC_LOG", u"FUNC_LN", u"FUNC_SIN",
                  u"FUNC_COS", u"FUNC_TAN", u"FUNC_CSC", u"FUNC_SEC", u"FUNC_COT",
                  u"FUNC_ARCSIN", u"FUNC_ARCCOS", u"FUNC_ARCTAN", u"FUNC_ARCCSC",
                  u"FUNC_ARCSEC", u"FUNC_ARCCOT", u"FUNC_SINH", u"FUNC_COSH",
                  u"FUNC_TANH", u"FUNC_ARSINH", u"FUNC_ARCOSH", u"FUNC_ARTANH",
                  u"FUNC_SQRT", u"CMD_TIMES", u"CMD_CDOT", u"CMD_DIV", u"CMD_FRAC",
                  u"CMD_BINOM", u"CMD_MATHIT", u"UNDERSCORE", u"CARET",
                  u"COLON", u"WS_CHAR", u"DIFFERENTIAL", u"LETTER", u"DIGIT",
                  u"NUMBER", u"EQUAL", u"LT", u"LTE", u"GT", u"GTE", u"BANG",
                  u"SYMBOL" ]

    grammarFileName = u"LaTeX.g4"

    def __init__(self, input=None, output=sys.stdout):
        super(LaTeXLexer, self).__init__(input, output=output)
        self.checkVersion("4.8")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


